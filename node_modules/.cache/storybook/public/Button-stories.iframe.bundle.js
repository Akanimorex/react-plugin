"use strict";
(self["webpackChunktask"] = self["webpackChunktask"] || []).push([["Button-stories"],{

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   Loading: () => (/* binding */ Loading),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fullWidth: () => (/* binding */ fullWidth)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../components/ButtonNew'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  component: Object(function webpackMissingModule() { var e = new Error("Cannot find module '../components/ButtonNew'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
  args: {
    isLoading: false,
    fullWidth: false,
    small: false,
    disabled: false
  }
});

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Primary = {
  args: {
    label: 'Building with Salil',
    variant: 'primary'
  }
};
const Secondary = {
  args: {
    label: 'Secondary Button',
    variant: 'secondary'
  }
};
const Loading = {
  args: {
    label: "Loading...",
    isLoading: true
  }
};
const fullWidth = {
  args: {
    label: "Full Width Button",
    fullWidth: true
  }
};
const Small = {
  args: {
    label: 'small button',
    small: true
  }
};
const Disabled = {
  args: {
    label: 'Disabled',
    disabled: true
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Building with Salil',\n    variant: 'primary'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Loading.parameters = {
  ...Loading.parameters,
  docs: {
    ...Loading.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Loading...\",\n    isLoading: true\n  }\n}",
      ...Loading.parameters?.docs?.source
    }
  }
};
fullWidth.parameters = {
  ...fullWidth.parameters,
  docs: {
    ...fullWidth.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Full Width Button\",\n    fullWidth: true\n  }\n}",
      ...fullWidth.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'small button',\n    small: true\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Disabled',\n    disabled: true\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary", "Loading", "fullWidth", "Small", "Disabled"];

/***/ })

}]);