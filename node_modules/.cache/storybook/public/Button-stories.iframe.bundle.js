"use strict";
(self["webpackChunktask"] = self["webpackChunktask"] || []).push([["Button-stories"],{

/***/ "./components/ButtonNew.jsx":
/*!**********************************!*\
  !*** ./components/ButtonNew.jsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonNew: () => (/* binding */ ButtonNew)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");

const ButtonNew = ({
  label,
  onClick,
  variant,
  size,
  loading,
  fullWidth,
  small,
  disabled
}) => {
  const variantClasses = `${variant === "secondary" ? "bg-gray-600 hover:bg-gray-700" : "bg-gray-900 hover:bg-black"}`;
  const smallClasses = `${small ? "text-sm py-2 px-3" : "text-base p-4"}`;
  const fullWidthClasses = `${fullWidth ? "w-full" : "w-auto"}`;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button", {
    disabled: disabled,
    className: `p-4 bg-black text-white rounded ${variantClasses} ${fullWidthClasses} ${smallClasses} ${disabled ? 'bg-gray-400' : ''} `,
    children: label
  });
};
ButtonNew.displayName = "ButtonNew";
ButtonNew.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "ButtonNew"
};

/***/ }),

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   Loading: () => (/* binding */ Loading),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fullWidth: () => (/* binding */ fullWidth)
/* harmony export */ });
/* harmony import */ var _components_ButtonNew__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/ButtonNew */ "./components/ButtonNew.jsx");


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  component: _components_ButtonNew__WEBPACK_IMPORTED_MODULE_0__.ButtonNew,
  args: {
    isLoading: false,
    fullWidth: false,
    small: false,
    disabled: false
  }
});

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Primary = {
  args: {
    label: 'Building with Salil',
    variant: 'primary'
  }
};
const Secondary = {
  args: {
    label: 'Secondary Button',
    variant: 'secondary'
  }
};
const Loading = {
  args: {
    label: "Loading...",
    isLoading: true
  }
};
const fullWidth = {
  args: {
    label: "Full Width Button",
    fullWidth: true
  }
};
const Small = {
  args: {
    label: 'small button',
    small: true
  }
};
const Disabled = {
  args: {
    label: 'Disabled',
    disabled: true
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Building with Salil',\n    variant: 'primary'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Loading.parameters = {
  ...Loading.parameters,
  docs: {
    ...Loading.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Loading...\",\n    isLoading: true\n  }\n}",
      ...Loading.parameters?.docs?.source
    }
  }
};
fullWidth.parameters = {
  ...fullWidth.parameters,
  docs: {
    ...fullWidth.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Full Width Button\",\n    fullWidth: true\n  }\n}",
      ...fullWidth.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'small button',\n    small: true\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Disabled',\n    disabled: true\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary", "Loading", "fullWidth", "Small", "Disabled"];

/***/ })

}]);
//# sourceMappingURL=Button-stories.iframe.bundle.js.map