{"version":3,"file":"NetworkTab-stories.ec8ecc8e1a834221fb90.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AAKA;AAIA;AACA;AACA;AAGA;AAEA;AAGA;;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAGA;AAIA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAMA;AA5FA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://task/./components/NetworkTab.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { data } from \"../utils/data\";\r\nimport { IoMdArrowDropdown, IoMdArrowDropup } from 'react-icons/io'\r\n\r\nexport const NetworkTab = ({ variant }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedChain, setSelectedChain] = useState(null);\r\n\r\n\r\n\r\n\r\n    const getActiveChain = (id) => {\r\n        const chain = data.find((d) => d.chainId === id);\r\n        setSelectedChain(chain);\r\n    };\r\n\r\n\r\n    const fileredChains =(id)=>{\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n\r\n        //if variant is FROM, set active network as Ethereum\r\n            if (variant === \"from\") {\r\n                setSelectedChain(()=>\r\n                data.find(d=>d.name.toLowerCase() === \"ethereum\")\r\n                )\r\n            }else \r\n            if(variant === \"to\"){\r\n                setSelectedChain(()=>\r\n                data.find(d=>d.name.toLowerCase() === \"polygon\")\r\n                )\r\n            }\r\n         \r\n        //if variant is TO, set active network as Polygon\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"w-1/6\">\r\n\r\n            <div className=\"relative flex flex-col\">\r\n                <button onClick={() => setIsOpen(!isOpen)} className=\" w-full p-2 items-center  flex justify-between  border-black font-bold tracking-wider border focus:border-black\">\r\n                    <span className=\"flex items-center\">\r\n                        {selectedChain && (\r\n                            <img\r\n                                src={selectedChain.icon}\r\n                                className=\"rounded-full\"\r\n                                alt=\"icon\"\r\n                                height=\"30\"\r\n                                width=\"30\"\r\n                            />\r\n                        )}\r\n                        {selectedChain?.name}\r\n                    </span>\r\n                    {\r\n                        !isOpen ? <IoMdArrowDropdown /> : <IoMdArrowDropup />\r\n                    }\r\n                </button>\r\n\r\n                <ul className=\"border-black flex  flex-col items-center rounded-lg p-2 w-full \">\r\n                    {\r\n                        isOpen && (data\r\n                            // .filter((c) => c.chainId !== selectedChain.chainId)\r\n                            .map((item, i) => {\r\n                                return (\r\n                                    <li\r\n                                        key={i}\r\n                                        // onClick={() => {\r\n                                        //     setSelectedChain(!selectedChain);\r\n                                        //     getActiveChain(d.chainId);\r\n                                        // }}\r\n                                        className=\"flex w-full justify-around  hover:bg-blue-300 p-3 cursor-pointer  hover:border-l-white border-l-4\"\r\n                                    >\r\n                                        <img\r\n                                            src={item?.icon}\r\n                                            className=\"rounded-full\"\r\n                                            alt=\"icon\"\r\n                                            height=\"30\"\r\n                                            width=\"30\" /> {item?.name} </li>\r\n                                )\r\n                            })\r\n                        )\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}