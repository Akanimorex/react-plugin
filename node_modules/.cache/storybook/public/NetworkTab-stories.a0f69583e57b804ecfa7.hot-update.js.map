{"version":3,"file":"NetworkTab-stories.a0f69583e57b804ecfa7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AAKA;AAIA;AACA;AACA;AAGA;AACA;AAGA;;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAGA;AAIA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAMA;AA3FA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACHA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://task/./components/NetworkTab.jsx","webpack://task/./utils/data.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { data } from \"../utils/data\";\r\nimport { IoMdArrowDropdown, IoMdArrowDropup } from 'react-icons/io'\r\n\r\nexport const NetworkTab = ({ variant }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedChain, setSelectedChain] = useState(null);\r\n\r\n\r\n\r\n\r\n    const getActiveChain = (id) => {\r\n        const chain = data.find((d) => d.chainId === id);\r\n        setSelectedChain(chain);\r\n    };\r\n\r\n\r\n    const fileredChains =(id)=>{\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n\r\n        //if variant is FROM, set active network as Ethereum\r\n            if (variant === \"from\") {\r\n                setSelectedChain(()=>\r\n                data.find(d=>d.name.toLowerCase() === \"ethereum\")\r\n                )\r\n            }else{\r\n                setSelectedChain(()=>\r\n                data.find(d=>d.name.toLowerCase() === \"polygon\")\r\n                )\r\n            }\r\n         \r\n        //if variant is TO, set active network as Polygon\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"w-1/6\">\r\n\r\n            <div className=\"relative flex flex-col\">\r\n                <button onClick={() => setIsOpen(!isOpen)} className=\" w-full p-2 items-center  flex justify-between  border-black font-bold tracking-wider border focus:border-black\">\r\n                    <span>\r\n                        {selectedChain && (\r\n                            <img\r\n                                src={selectedChain.icon}\r\n                                className=\"rounded-full\"\r\n                                alt=\"icon\"\r\n                                height=\"30\"\r\n                                width=\"30\"\r\n                            />\r\n                        )}\r\n                        {selectedChain?.name}\r\n                    </span>\r\n                    {\r\n                        !isOpen ? <IoMdArrowDropdown /> : <IoMdArrowDropup />\r\n                    }\r\n                </button>\r\n\r\n                <ul className=\"border-black flex flex-col items-start rounded-lg p-2 w-full \">\r\n                    {\r\n                        isOpen && (data\r\n                            // .filter((c) => c.chainId !== selectedChain.chainId)\r\n                            .map((item, i) => {\r\n                                return (\r\n                                    <li\r\n                                        key={i}\r\n                                        // onClick={() => {\r\n                                        //     setSelectedChain(!selectedChain);\r\n                                        //     getActiveChain(d.chainId);\r\n                                        // }}\r\n                                        className=\"flex w-full justify-around  hover:bg-blue-300 p-3 cursor-pointer  hover:border-l-white border-l-4\"\r\n                                    >\r\n                                        <img\r\n                                            src={item?.icon}\r\n                                            className=\"rounded-full\"\r\n                                            alt=\"icon\"\r\n                                            height=\"30\"\r\n                                            width=\"30\" /> {item?.name} </li>\r\n                                )\r\n                            })\r\n                        )\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","\r\nexport const data = [\r\n    {\r\n      chainId: 1,\r\n      name: \"Ethereum\",\r\n      isL1: true,\r\n      sendingEnabled: true,\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/Ether.svg\",\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: false },\r\n      currency: {\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/eth.svg\",\r\n        name: \"Ether\",\r\n        symbol: \"ETH\",\r\n        decimals: 18,\r\n        minNativeCurrencyForGas: \"15000000000000000\",\r\n      },\r\n      rpcs: [\"https://rpc.ankr.com/eth\"],\r\n      explorers: [\"https://etherscan.io\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 10,\r\n      name: \"Optimism\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/Optimism.svg\",\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      rpcs: [\"https://mainnet.optimism.io/\"],\r\n      currency: {\r\n        name: \"Ether\",\r\n        symbol: \"ETH\",\r\n        decimals: 18,\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/eth.svg\",\r\n        minNativeCurrencyForGas: \"900000000000000\",\r\n      },\r\n      explorers: [\"https://optimistic.etherscan.io\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 56,\r\n      name: \"BSC\",\r\n      isL1: false,\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/BSC.svg\",\r\n      sendingEnabled: true,\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      currency: {\r\n        name: \"Binance Chain Native Token\",\r\n        symbol: \"BNB\",\r\n        decimals: 18,\r\n        minNativeCurrencyForGas: \"1400000000000000\",\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/bnb.svg\",\r\n      },\r\n      rpcs: [\r\n        \"https://bsc-dataseed1.binance.org\",\r\n        \"https://bsc-dataseed2.binance.org\",\r\n        \"https://bsc-dataseed3.binance.org\",\r\n        \"https://bsc-dataseed4.binance.org\",\r\n        \"https://bsc-dataseed1.defibit.io\",\r\n        \"https://bsc-dataseed2.defibit.io\",\r\n        \"https://bsc-dataseed3.defibit.io\",\r\n        \"https://bsc-dataseed4.defibit.io\",\r\n        \"https://bsc-dataseed1.ninicoin.io\",\r\n        \"https://bsc-dataseed2.ninicoin.io\",\r\n        \"https://bsc-dataseed3.ninicoin.io\",\r\n        \"https://bsc-dataseed4.ninicoin.io\",\r\n        \"wss://bsc-ws-node.nariox.org\",\r\n      ],\r\n      explorers: [\"https://bscscan.com\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 100,\r\n      name: \"Gnosis\",\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/gnosis.svg\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      currency: {\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/dai.svg\",\r\n        name: \"XDAI\",\r\n        symbol: \"XDAI\",\r\n        decimals: 18,\r\n        minNativeCurrencyForGas: \"2100000000000000\",\r\n      },\r\n      rpcs: [\r\n        \"https://rpc.xdaichain.com\",\r\n        \"https://xdai.poanetwork.dev\",\r\n        \"wss://rpc.xdaichain.com/wss\",\r\n        \"wss://xdai.poanetwork.dev/wss\",\r\n        \"http://xdai.poanetwork.dev\",\r\n        \"https://dai.poa.network\",\r\n        \"ws://xdai.poanetwork.dev:8546\",\r\n      ],\r\n      explorers: [\"https://gnosisscan.io\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 137,\r\n      name: \"Polygon\",\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/Matic.svg\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      currency: {\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/matic.svg\",\r\n        name: \"Matic\",\r\n        symbol: \"MATIC\",\r\n        decimals: 18,\r\n        minNativeCurrencyForGas: \"30000000000000000\",\r\n      },\r\n      rpcs: [\r\n        \"https://rpc-mainnet.matic.network\",\r\n        \"wss://ws-mainnet.matic.network\",\r\n        \"https://rpc-mainnet.matic.quiknode.pro\",\r\n        \"https://matic-mainnet.chainstacklabs.com\",\r\n      ],\r\n      explorers: [\"https://polygonscan.com\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 250,\r\n      name: \"Fantom\",\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/Fantom.svg\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      rpcs: [\"https://rpc.ftm.tools\"],\r\n      currency: {\r\n        name: \"Fantom\",\r\n        symbol: \"FTM\",\r\n        decimals: 18,\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/ftm.svg\",\r\n        minNativeCurrencyForGas: \"60000000000000000\",\r\n      },\r\n      explorers: [\"https://ftmscan.com\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 324,\r\n      name: \"zkSync Era\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/zksync-era.svg\",\r\n      receivingEnabled: true,\r\n      rpcs: [\"https://mainnet.era.zksync.io\"],\r\n      currency: {\r\n        name: \"Ether\",\r\n        symbol: \"ETH\",\r\n        decimals: 18,\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/eth.svg\",\r\n        minNativeCurrencyForGas: \"900000000000000\",\r\n      },\r\n      explorers: [\"https://explorer.zksync.io\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 1101,\r\n      name: \"Polygon zkEVM\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/zkEVM.svg\",\r\n      receivingEnabled: true,\r\n      rpcs: [\"https://zkevm-rpc.com\"],\r\n      currency: {\r\n        name: \"Ether\",\r\n        symbol: \"ETH\",\r\n        decimals: 18,\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/eth.svg\",\r\n        minNativeCurrencyForGas: \"900000000000000\",\r\n      },\r\n      explorers: [\"https://zkevm.polygonscan.com\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 42161,\r\n      name: \"Arbitrum\",\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/Arbitrum.svg\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      currency: {\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/eth.svg\",\r\n        name: \"Arbitrum Ether\",\r\n        symbol: \"ETH\",\r\n        decimals: 18,\r\n        minNativeCurrencyForGas: \"1400000000000000\",\r\n      },\r\n      rpcs: [\r\n        \"https://arbitrum-mainnet.infura.io/v3/${INFURA_API_KEY}\",\r\n        \"https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}\",\r\n        \"https://arb1.arbitrum.io/rpc\",\r\n        \"wss://arb1.arbitrum.io/ws\",\r\n      ],\r\n      explorers: [\"https://arbiscan.io\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 43114,\r\n      name: \"Avalanche\",\r\n      isL1: false,\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/Avalanche.svg\",\r\n      sendingEnabled: true,\r\n      receivingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      rpcs: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\r\n      currency: {\r\n        name: \"Avalanche\",\r\n        symbol: \"AVAX\",\r\n        icon: \"https://assets.coingecko.com/coins/images/12559/small/coin-round-red.png\",\r\n        decimals: 18,\r\n        minNativeCurrencyForGas: \"21000000000000000\",\r\n      },\r\n      explorers: [\"https://snowtrace.io\"],\r\n    },\r\n  \r\n    {\r\n      chainId: 1313161554,\r\n      name: \"Aurora\",\r\n      isL1: false,\r\n      sendingEnabled: true,\r\n      refuel: { sendingEnabled: true, receivingEnabled: true },\r\n      icon: \"https://movricons.s3.ap-south-1.amazonaws.com/aurora.svg\",\r\n      receivingEnabled: true,\r\n      rpcs: [\"https://mainnet.aurora.dev\"],\r\n      currency: {\r\n        name: \"Ether\",\r\n        symbol: \"ETH\",\r\n        decimals: 18,\r\n        icon: \"https://maticnetwork.github.io/polygon-token-assets/assets/eth.svg\",\r\n        minNativeCurrencyForGas: \"900000000000000\",\r\n      },\r\n      explorers: [\"https://aurorascan.dev\"],\r\n    },\r\n  ];\r\n  "],"names":[],"sourceRoot":""}