"use strict";
self["webpackHotUpdatetask"]("Button-stories",{

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Loading: () => (/* binding */ Loading),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_ButtonNew__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/ButtonNew */ "./components/ButtonNew.jsx");


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  component: _components_ButtonNew__WEBPACK_IMPORTED_MODULE_0__.ButtonNew,
  args: {
    isLoading: false
  }
});

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Primary = {
  args: {
    label: 'Building with Salil',
    variant: 'primary'
  }
};
const Secondary = {
  args: {
    label: 'Secondary Button',
    variant: 'secondary'
  }
};
const Loading = {
  args: {
    isLoading: true
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Building with Salil',\n    variant: 'primary'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Loading.parameters = {
  ...Loading.parameters,
  docs: {
    ...Loading.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    isLoading: true\n  }\n}",
      ...Loading.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary", "Loading"];

/***/ })

});